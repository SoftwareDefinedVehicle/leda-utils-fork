#!/bin/bash
# /********************************************************************************
# * Copyright (c) 2022 Contributors to the Eclipse Foundation
# *
# * See the NOTICE file(s) distributed with this work for additional
# * information regarding copyright ownership.
# *
# * This program and the accompanying materials are made available under the
# * terms of the Apache License 2.0 which is available at
# * https://www.apache.org/licenses/LICENSE-2.0
# *
# * SPDX-License-Identifier: Apache-2.0
# ********************************************************************************/

DISTRIB_DESCRIPTION=$(cat /etc/issue)

printf " _          _       \n"
printf "| | ___  __| | __ _ \n"
printf "| |/ _ \\/ _\` |/ _\` |\n"
printf "| |  __/ (_| | (_| |\n"
printf "|_|\___|\\__,_|\\__,_|\n"
printf "%s (%s %s %s)\n" "$DISTRIB_DESCRIPTION" "$(uname -o)" "$(uname -r)" "$(uname -m)"

# Date and time
DATUM=`date +"%A, %e %B %Y"`

# Hostname
HOSTNAME=`hostname`

# Uptime
UP0=`cut -d. -f1 /proc/uptime`
UP1=$(($UP0/86400))		
UP2=$(($UP0/3600%24))	
UP3=$(($UP0/60%60))		
UP4=$(($UP0%60))		

# Average cpu load
LOAD=`cat /proc/loadavg`
LOAD1=`echo "$LOAD" | awk '{print $1}'`	# Last minute
LOAD2=`echo "$LOAD" | awk '{print $2}'`	# Last five minutes
LOAD3=`echo "$LOAD" | awk '{print $3}'`	# Last fifteen minutes

# Temperature - only for raspi
{ TEMP=`vcgencmd measure_temp | cut -c '6-' | sed "s/'C//"`; } 2>/dev/null

# Disk usage
DISK=`df -h | grep ' /$'`
DISK1=`echo "$DISK" | awk '{print $2}'`	# Total
DISK2=`echo "$DISK" | awk '{print $3}'`	# Used
DISK3=`echo "$DISK" | awk '{print $4}'`	# Free

# Memory usage
RAM=`free -h | tr -d 'i'`
RAM1=`echo "$RAM" | grep 'Mem' | awk '{print $2}'`	# Total
RAM2=`echo "$RAM" | grep 'Mem' | awk '{print $3}'`	# Used
RAM3=`echo "$RAM" | grep 'Mem' | awk '{print $4}'`	# Free
#RAM4=`echo "$RAM" | grep 'Swap' | awk '{print $3}'`	# Swap used

# Get IP adress
IP=`ip address show scope global`
IP_ETH0=`echo "$IP" | awk '/scope global .*eth0/ {print $2}/scope global .*wlan0/ {print $2}' | xargs`
IP_WLAN0=`echo "$IP" | awk '/scope global .*wlan0/ {print $2}' | xargs`
IP_MLAN0=`echo "$IP" | awk '/scope global .*mlan0/ {print $2}' | xargs`

# Fancy status report
echo -e "\033[1;32m
\033[1;32m \033[0;37mHostname......: \033[1;33m$HOSTNAME
\033[1;31m \033[0;37mUptime........: $UP1 days, $UP2:$UP3 hours
\033[1;31m \033[0;37m\0303\0230 System load.: $LOAD1 (1min) \t| $LOAD2 (5min) \t| $LOAD3 (15min)
\033[1;31m \033[0;37mDisk Space....: Total: $DISK1 \t| Used: $DISK2 \t| Free: $DISK3
\033[1;31m \033[0;37mRAM ..........: Total: $RAM1 \t| Used: $RAM2 \t| Free: $RAM3
\033[1;31m \033[0;37mIP-Addresses..: Eth0: \033[1;35m$IP_ETH0
\033[1;31m \033[0;37m                WiFi: \033[1;35m$IP_WLAN0
\033[m"

echo -e "To check SDV services health, run \033[0;37m$ \033[1;33msdv-health\033[m"
echo -e "Use \033[0;37m$ \033[1;33msdv-device-info\033[m to display device configuration"
echo -e "\033[m"

if ! systemctl is-active --quiet k3s; then
    echo -e "\033[1;35mWarning: \033[1;33m Kubernetes Control Plane is not yet up and running.\033[m\n"
fi

# Inform about pending reboot
if [ -r /run/systemd/shutdown/scheduled ]; then
    source /run/systemd/shutdown/scheduled;
    echo -e "\033[1;31m\033[5mSystem will $MODE at: $(date --date="@$(( USEC / 1000000 ))")\033[0m";
fi
